services:
  db:
    container_name: foodgram-db
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  backend:
    container_name: foodgram-app
    image: venivliev/foodgram_back:latest
    build: ../backend
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
    restart: always

  frontend:
    container_name: foodgram-front
    image: venivliev/foodgram_front:latest
    build: ../frontend
    volumes:
      - frontend_build:/frontend_build
    command: cp -r /app/build/. /frontend_build/
    depends_on:
      - backend

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.23.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_build:/usr/share/nginx/html
      - static_volume:/var/html/static
      - media_volume:/var/html/media
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:
